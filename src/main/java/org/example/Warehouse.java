package org.example;

import java.util.HashMap;
import java.util.Map;


public class Warehouse {

        private final Map<Product, Integer> stock = new HashMap<>();
        Cash cash = new Cash();


        public Product findProduct(String name) {
            for(Map.Entry<Product, Integer> entry : stock.entrySet()) {
                if(name.equalsIgnoreCase(entry.getKey().getName())) {
                    return entry.getKey();
                }
            }
            throw new ProductNotFoundException("–¢–æ–≤–∞—Ä '" + name + "' –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–∫–ª–∞–¥–µ!");
        }

        public void addProduct(String name, double price, int quantity) {
            if(quantity<=0 || price <0) {
                throw new IllegalArgumentException("–¶–µ–Ω–∞ –∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è!");
            }
            Product product = new Product(name, price);

            stock.put(product, stock.getOrDefault(product, 0) + quantity);
        }

        public void printInventory() {
            System.out.println("\nüì¶ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∫–ª–∞–¥–∞:");
            for(Map.Entry<Product, Integer> entry : stock.entrySet()) {
                double totalForItem = entry.getKey().getPrice() * entry.getValue();
                System.out.printf("%s ‚Äî %d —à—Ç. –ø–æ %.2f —Ä—É–±. (–í—Å–µ–≥–æ: %.2f —Ä—É–±.)%n",
                        entry.getKey().getName(),
                        entry.getValue(),
                        entry.getKey().getPrice(),
                        totalForItem);
            }
            System.out.printf("üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: %.2f —Ä—É–±.%n", getTotalValue());
        }

        public double getTotalValue() {
            double sum = 0;
            for(Map.Entry<Product, Integer> entry : stock.entrySet()) {
                sum += entry.getKey().getPrice() * entry.getValue();
            }
            return sum;
        }

        public void sellProduct(String name, int quantity, int discount) {

            Product product = findProduct(name);
            int currentQuantity = stock.get(product);

            if (quantity <= 0) {
                throw new IllegalArgumentException("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è!");
            }
            if (currentQuantity < quantity) {
                throw new NotEnoughProductException("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ '" + name + "' –Ω–∞ —Å–∫–ª–∞–¥–µ!");
            }

            stock.put(product, currentQuantity - quantity);

            double totalPrice = cash.applyDiscount(product.getPrice(), discount) * quantity;
            System.out.printf("‚úÖ –ü—Ä–æ–¥–∞–Ω–æ %d —à—Ç. %s –∑–∞ %.2f —Ä—É–±.%n",
                    quantity, product.getName(), totalPrice);

            if (stock.get(product) == 0) {
                stock.remove(product);
                System.out.println("‚ö†Ô∏è –¢–æ–≤–∞—Ä '" + product.getName() + "' –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –Ω–∞ —Å–∫–ª–∞–¥–µ.");
            }
        }

}
